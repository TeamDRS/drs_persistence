  @Autowired
  public UserManagementImpl(UserRepository userRepository,
    RoleRepository roleRepository) {
    this.userRepository = userRepository;
    this.roleRepository = roleRepository;
  }
  
http://docs.spring.io/spring-data/jpa/docs/1.3.0.RELEASE/reference/html/jpa.repositories.html

 Obtaining the Primary Key

JPA 2 provides a generic method for getting the object ID (primary key) of a specified managed entity object. 
For example:

PersistenceUnitUtil util = emf.getPersistenceUnitUtil();
Object projectId = util.getIdentifier(project);

A PersistenceUnitUtil instance is obtained from the EntityManagerFactory. 
The getIdentifier method takes one argument, a managed entity object, and returns the primary key. 
In case of a composite primary key - an instance of the ID class or the embeddable class is returned.

http://www.objectdb.com/java/jpa/entity/id#Embedded_Primary_Key_

RouteRepository:
/*
	 * The first id refers to attribute id of EntityClass (of type RouteDB), 
	 * and the second one refers to the id property of EmbeddedIdClass
	 * 
	 * http://stackoverflow.com/questions/10649691/using-embeddedid-with-jparepository
	 */
	/*
	@Query("select r from ROUTE r where id.user_name_id =:username")
	  public RouteDB findRouteByUsername(@Param("username") String username);
	 */
	//@Query("select r.id from loggedroute r where r.userName = :username")
	//public Long findRouteIdByUsername(@Param("username") String username);
	 